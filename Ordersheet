package com.dastin.megahraya.materialdesign;


import android.app.Activity;
import android.app.DatePickerDialog;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.support.annotation.Nullable;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.text.InputType;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import org.json.JSONArray;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;
import com.dastin.megahraya.materialdesign.helper.DatabaseHelper;
import com.dastin.megahraya.materialdesign.model.BarangModel;
import com.dastin.megahraya.materialdesign.model.PegawaiModel;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.Map;

/**
 * Created by MEGAHRAYA on 2/18/2016.
 */
public class OrdersheetFragment extends Fragment implements Spinner.OnItemSelectedListener {

    //UI References
    public TextView txtTglPerjanjian;
    public TextView txtTglPenagihan;
    public Button btnFoto;

    //Declaring an Spinner
    private Spinner spinner;
    private Spinner spinnerBarang;

    private String kode_area;
    private String iddivisi;
    private String idarea;
    private String kode_barang;
    private String nip;

    //An ArrayList for Spinner Items
    private ArrayList<String> pegawai;
    private ArrayList<String> barang;

    //JSON Array
    JSONArray pgw = null;
    JSONObject jsonObjPgw = null;
    JSONArray brg = null;
    JSONObject jsonObjBrg = null;



    private static final int CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE = 1888;
    public ImageView imageKonsumen;
    public Uri imageUri;

    // Database Helper
    DatabaseHelper db;

    public OrdersheetFragment() {
        setHasOptionsMenu(true);
    }
    // GPSTracker class
    GPSTracker gps;
    @Nullable
    @Override



    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View v = inflater.inflate(R.layout.ordersheet,container,false);
        getActivity().setTitle("Ordersheet");

        // create class object
        gps = new GPSTracker(getActivity());

        // check if GPS enabled
        if(gps.canGetLocation()){

            double latitude = gps.getLatitude();
            double longitude = gps.getLongitude();

            Log.e("Your Location", "Your Location is - \nLat: " + latitude + "\nLong: " + longitude);
            // \n is for new line
            Toast.makeText(getActivity(), "Your Location is - \nLat: " + latitude + "\nLong: " + longitude, Toast.LENGTH_LONG).show();

        }else{
            // can't get location
            // GPS or Network is not enabled
            // Ask user to enable GPS/network in settings
            gps.showSettingsAlert();
        }

        db = new DatabaseHelper(getActivity().getApplicationContext());

        imageKonsumen = (ImageView) v.findViewById(R.id.imageKonsumen);
        btnFoto = (Button) v.findViewById(R.id.btn_ambilfoto);
        btnFoto.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
                SimpleDateFormat timeStampFormat = new SimpleDateFormat("yyyyMMddHHmmssSS");
                Date myDate = new Date();
                String filename = timeStampFormat.format(myDate);
                String root = Environment.getExternalStorageDirectory().toString();
                File myDir = new File(root + "/megahraya");
                myDir.mkdirs();
                File photo = new File(root + "/megahraya/",  filename + ".jpg");
                intent.putExtra(MediaStore.EXTRA_OUTPUT,
                        Uri.fromFile(photo));
                imageUri = Uri.fromFile(photo);
                OrdersheetFragment.this.startActivityForResult(intent, 100);
                // getActivity().startActivityForResult(intent, 100);
            }
        });


                txtTglPerjanjian = (TextView) v.findViewById(R.id.input_tglperjanjian);

        txtTglPerjanjian.setOnClickListener(new View.OnClickListener() {
                                                @Override
                                                public void onClick(View v) {
                                                    final Calendar calendar = Calendar.getInstance();
                                                    int yy = calendar.get(Calendar.YEAR);
                                                    int mm = calendar.get(Calendar.MONTH);
                                                    int dd = calendar.get(Calendar.DAY_OF_MONTH);
                                                    DatePickerDialog datePicker = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {
                                                        @Override
                                                        public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
                                                            String date = String.valueOf(year) +"-"+String.valueOf(monthOfYear + 1)
                                                                    +"-"+String.valueOf(dayOfMonth);
                                                            txtTglPerjanjian.setText(date);
                                                        }
                                                    }, yy, mm, dd);
                                                    datePicker.show();
                                                }
                                            }

        );

        txtTglPenagihan = (TextView) v.findViewById(R.id.input_tglpenagihan);

        txtTglPenagihan.setOnClickListener(new View.OnClickListener() {
                                               @Override
                                               public void onClick(View v) {
                                                   final Calendar calendar = Calendar.getInstance();
                                                   int yy = calendar.get(Calendar.YEAR);
                                                   int mm = calendar.get(Calendar.MONTH);
                                                   int dd = calendar.get(Calendar.DAY_OF_MONTH);
                                                   DatePickerDialog datePicker = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {
                                                       @Override
                                                       public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
                                                           String date = String.valueOf(year) + "-" + String.valueOf(monthOfYear + 1)
                                                                   + "-" + String.valueOf(dayOfMonth);
                                                           txtTglPenagihan.setText(date);
                                                       }
                                                   }, yy, mm, dd);
                                                   datePicker.show();
                                               }
                                           }

        );

        SharedPreferences shared = this.getActivity().getSharedPreferences(Config.SHARED_PREF_NAME, Context.MODE_PRIVATE);

        kode_area = (shared.getString(Config.SHARED_PREF_KODEAREA, ""));
        iddivisi = (shared.getString(Config.SHARED_PREF_IDDIVISI, ""));
        idarea = (shared.getString(Config.SHARED_PREF_IDAREA, ""));

        pegawai = new ArrayList<String>();

        //Initializing Spinner
        spinner = (Spinner) v.findViewById(R.id.spinnerMarketing);
        spinnerBarang = (Spinner) v.findViewById(R.id.spinnerBarang);

        //Adding an Item Selected Listener to our Spinner
        //As we have implemented the class Spinner.OnItemSelectedListener to this class iteself we are passing this to setOnItemSelectedListener
        spinner.setOnItemSelectedListener(this);
        spinnerBarang.setOnItemSelectedListener(this);

        //getData();
        loadSpinnerData();
        loadSpinnerDataBarang();
        return v;
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case 100:
                if (resultCode == Activity.RESULT_OK) {
                    Uri selectedImage = imageUri;
                    getActivity().getContentResolver().notifyChange(selectedImage, null);
                    ContentResolver cr = getActivity().getContentResolver();
                    Bitmap bitmap;

                    try {
                        bitmap = android.provider.MediaStore.Images.Media
                                .getBitmap(cr, selectedImage);

                        imageKonsumen.setImageBitmap(bitmap);
                        Toast.makeText(getActivity(), selectedImage.toString(),
                                Toast.LENGTH_LONG).show();
                    } catch (Exception e) {
                        Toast.makeText(getActivity(), "Failed to load", Toast.LENGTH_SHORT)
                                .show();
                        Log.e("Camera", e.toString());
                    }
                }else{
                    Toast.makeText(getActivity(), "Aduh coy to load", Toast.LENGTH_SHORT)
                            .show();
                }
        }
    }


    private void loadSpinnerData() {
        // database handler
        db = new DatabaseHelper(getActivity().getApplicationContext());

        // Spinner Drop down elements
        List<String> lables = db.getAllPegawai();

        // Creating adapter for spinner
        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(getActivity(),
                android.R.layout.simple_spinner_item, lables);

        // Drop down layout style - list view with radio button
        dataAdapter
                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

        // attaching data adapter to spinner
        spinner.setAdapter(dataAdapter);
    }

    private void loadSpinnerDataBarang() {
        // database handler
        db = new DatabaseHelper(getActivity().getApplicationContext());

        // Spinner Drop down elements
        List<String> lables = db.getAllBarang();

        // Creating adapter for spinner
        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(getActivity(),
                android.R.layout.simple_spinner_item, lables);

        // Drop down layout style - list view with radio button
        dataAdapter
                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

        // attaching data adapter to spinner
        spinnerBarang.setAdapter(dataAdapter);
    }

    private void getData(){
        //Creating a string request
        StringRequest stringRequest = new StringRequest(Request.Method.POST, Config.PEGAWAI_URL,
                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {

                        // Making a request to url and getting response
                        String jsonStr = response;

                        if (jsonStr != null) {
                            try {
                                jsonObjPgw = new JSONObject(jsonStr);

                                // Getting JSON Array node
                                pgw = jsonObjPgw.getJSONArray("pegawai");
                                PegawaiModel pgwdel = new PegawaiModel();
                                db.deletePegawai(pgwdel);
                                // looping through All Contacts
                                for (int i = 0; i < pgw.length(); i++) {
                                    JSONObject c = pgw.getJSONObject(i);

                                    PegawaiModel pgw = new PegawaiModel(c.getString(Config.TAG_NIP), c.getString(Config.TAG_NAMA));
                                    db.createPegawai(pgw);


                                }
                                //spinner.setAdapter(new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_dropdown_item, pegawai));
                                loadSpinnerData();
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                        } else {
                            Log.e("ServiceHandler", "Couldn't get any data from the url");
                        }
                    }
                },
                new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        Toast.makeText(getActivity(),error.toString(),Toast.LENGTH_LONG).show();
                    }
                }){
            @Override
            protected Map<String,String> getParams(){
                Map<String,String> params = new HashMap<String, String>();
                params.put(Config.TAG_KODEAREA,kode_area);
                params.put(Config.TAG_DIVISI,iddivisi);
                return params;
            }

        };

        //Creating a request queue
        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());

        //Adding request to the queue
        requestQueue.add(stringRequest);
    }

    private void getDataBarang(){
        //Creating a string request
        StringRequest stringRequest = new StringRequest(Request.Method.POST, Config.BARANG_URL,
                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {

                        // Making a request to url and getting response
                        String jsonStr = response;

                        if (jsonStr != null) {
                            try {
                                jsonObjBrg = new JSONObject(jsonStr);

                                // Getting JSON Array node
                                brg = jsonObjBrg.getJSONArray("barang");
                                BarangModel brgdel = new BarangModel();
                                db.deleteBarang(brgdel);
                                // looping through All Contacts
                                for (int i = 0; i < brg.length(); i++) {
                                    JSONObject c = brg.getJSONObject(i);

                                    BarangModel brg = new BarangModel(c.getString(Config.TAG_KODE_BARANG), c.getString(Config.TAG_NAMA_BARANG));
                                    db.createBarang(brg);


                                }
                                //spinner.setAdapter(new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_dropdown_item, pegawai));
                                loadSpinnerDataBarang();
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                        } else {
                            Log.e("ServiceHandler", "Couldn't get any data from the url");
                        }
                    }
                },
                new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        Toast.makeText(getActivity(),error.toString(),Toast.LENGTH_LONG).show();
                    }
                }){
            @Override
            protected Map<String,String> getParams(){
                Map<String,String> params = new HashMap<String, String>();
                params.put(Config.TAG_IDAREA,idarea);
                return params;
            }

        };

        //Creating a request queue
        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());

        //Adding request to the queue
        requestQueue.add(stringRequest);
    }

    //this method will execute when we pic an item from the spinner
    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
        // On selecting a spinner item
        Spinner spinner = (Spinner) parent;
        if(spinner.getId() == R.id.spinnerBarang)
        {
            String label = parent.getItemAtPosition(position).toString();
            kode_barang = db.getBarang(label);
            Log.e("HASIL", kode_barang);
        }
        else if(spinner.getId() == R.id.spinnerMarketing)
        {
            String label = parent.getItemAtPosition(position).toString();
            nip = db.getPegawai(label);
            Log.e("HASIL", nip);
        }


    }

    //When no item is selected this method would execute
    @Override
    public void onNothingSelected(AdapterView<?> parent) {
        //textViewName.setText("");
        //textViewCourse.setText("");
        //textViewSession.setText("");
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setHasOptionsMenu(true);
    }

    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
        menu.clear();
        inflater.inflate(R.menu.menu_order, menu);
        super.onCreateOptionsMenu(menu, inflater);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_refresh_order) {
            if(android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.HONEYCOMB) {
                Toast.makeText(getActivity(),"IMEI Copied",Toast.LENGTH_LONG).show();
            } else {

                getData();
                getDataBarang();
                //Log.d("Tag Count", "Tag Count: " + db.getAllPegawai().size());
            }
            return true;
        }

        return super.onOptionsItemSelected(item);
    }


}
